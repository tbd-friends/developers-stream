@using site.Models
@using Syncfusion.Blazor.TreeGrid.Internal
@using MediatR
@using application.Query
@using System.Reflection
@using System.ComponentModel.DataAnnotations


<PlatformInput OnPlatformAdded="OnPlatformAdded" />
@if (@Platforms != null)
{
    <SfListView Enable="true" DataSource="Platforms" TValue="Platform" CssClass="platform-listview">
        <ListViewFieldSettings TValue="Platform" Id="Id" Text="Name" />
        <ListViewTemplates TValue="Platform">
            <Template>
                <div class="platform-selected">
                    <img src="images/@(context.Name).svg" />
                    <span>
                        @(context.Url)<a class="btn btn-small waves-effect waves-light" @onclick="(() => OnPlatformRemoved(context))"><i class="material-icons">cancel</i></a>
                    </span>
                </div>
            </Template>
        </ListViewTemplates>
    </SfListView>
}
@code
{
    [Parameter]
    public List<Platform> Platforms { get; set; }

    [Parameter]
    public EventCallback<List<Platform>> PlatformsChanged { get; set; }

    [CascadingParameter]
    public EditContext EditContext { get; set; }

    public bool IsValid => Platforms.All(p => !p.AlreadyRegistered);

    protected async Task OnPlatformAdded(Platform platform)
    {
        Platforms.Add(platform);

        EditContext.Validate();

        await PlatformsChanged.InvokeAsync(Platforms);
    }

    protected void OnPlatformRemoved(Platform platform)
    {
        Platforms.Remove(platform);

        EditContext.Validate();

        PlatformsChanged.InvokeAsync(Platforms);
    }

}
